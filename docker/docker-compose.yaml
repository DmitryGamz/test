services:
  postgres:
    image: postgres:latest
    restart: no
    hostname: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pharmacy
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:8.13.0
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - app-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s"]
      interval: 10s
      timeout: 20s
      retries: 10
      start_period: 40s

  logstash:
    image: logstash:8.13.0
    hostname: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/main.conf
    networks:
      - app-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: kibana:8.13.0
    hostname: kibana
    ports:
      - "5601:5601"
    networks:
      - app-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  filebeat:
    image: elastic/filebeat:7.17.21
    hostname: filebeat
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs:/var/log/app:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network
    depends_on:
      - logstash

networks:
  app-network:
    driver: bridge

volumes:
  elasticsearch-data: